{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\KeveshaB\\\\Desktop\\\\PWA\\\\movie\\\\src\\\\App.js\",\"C:\\\\Users\\\\KeveshaB\\\\Desktop\\\\PWA\\\\movie\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\KeveshaB\\\\Desktop\\\\PWA\\\\movie\\\\src\\\\index.js\"],\"names\":[\"App\",\"react_default\",\"a\",\"createElement\",\"className\",\"aria-hidden\",\"type\",\"placeholder\",\"onClick\",\"this\",\"handleClick\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"gRA6DeA,4MArDX,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,aAAd,WAAkCH,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,gBAAgBC,cAAY,UAC3EJ,EAAAC,EAAAC,cAAA,QAAA,CAAOG,KAAK,OAAOF,UAAU,wCAAwCG,YAAY,qBACjFN,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,MAAb,gCAA+CH,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,gBAAgBC,cAAY,SAAxF,KACAJ,EAAAC,EAAAC,cAAA,SAAA,CAAQG,KAAK,SAASF,UAAU,kCAAkCI,QAASC,KAAKC,aAAhF,kBAVMC,EAAAA,YCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,EAAAA,EAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport { Router, browserHistory, Route, Link } from 'react-router';\\nimport './view/css/bootstrap.css';\\nimport './view/css/main.css';\\nimport './view/css/font-awesome.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <div className=\\\"col-3\\\" >\\n            <h1 className=\\\"display-4\\\">Welcome <i className=\\\"fa fa-smile-o\\\" aria-hidden=\\\"true\\\"></i></h1>\\n            <input type=\\\"text\\\" className=\\\"form-control form-rounded text-center\\\" placeholder=\\\"What's your name\\\" />\\n            <br/>\\n            <p className=\\\"h6\\\">Click below to join the game.<i className=\\\"fa fa-gamepad\\\" aria-hidden=\\\"true\\\"></i> </p>\\n            <button type=\\\"button\\\" className=\\\"col-6 btn btn-info form-rounded\\\" onClick={this.handleClick}>Join</button>\\n          </div>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\n\\n// // export default App;\\n// const NavBar = () => (\\n//   <div className=\\\"navbar\\\">\\n//     <Link to=\\\"/\\\">Feed</Link>\\n//     <Link to=\\\"/profile\\\">Profile</Link>\\n//   </div>\\n// );\\n\\n// const Template = ({ title }) => (\\n//   <div>\\n//     <NavBar />\\n//     <p className=\\\"page-info\\\">\\n//       This is the {title} page.\\n//     </p>\\n//   </div>\\n// );\\n\\n// const Feed = (props) => (\\n//   <Template title=\\\"Feed\\\"/>\\n// );\\n\\n// const Profile = (props) => (\\n//   <Template title=\\\"Profile\\\"/>\\n// );\\n\\n// class App extends Component {\\n//   render() {\\n//     return (\\n//       <Router history={browserHistory}>\\n//         <Route path=\\\"/\\\" component={Feed}/>\\n//         <Route path=\\\"/profile\\\" component={Profile}/>\\n//       </Router>\\n//     );\\n//   }\\n// }\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{27:function(e,a,t){e.exports=t(49)},42:function(e,a,t){},44:function(e,a,t){},46:function(e,a,t){},49:function(e,a,t){\"use strict\";t.r(a);var n=t(1),o=t.n(n),c=t(17),r=t.n(c),l=t(18),i=t(19),s=t(25),m=t(20),u=t(26),d=(t(48),t(42),t(44),t(46),function(e){function a(){return Object(l.a)(this,a),Object(s.a)(this,Object(m.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(i.a)(a,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"header\",{className:\"App-header\"},o.a.createElement(\"div\",{className:\"col-3\"},o.a.createElement(\"h1\",{className:\"display-4\"},\"Welcome \",o.a.createElement(\"i\",{className:\"fa fa-smile-o\",\"aria-hidden\":\"true\"})),o.a.createElement(\"input\",{type:\"text\",className:\"form-control form-rounded text-center\",placeholder:\"What's your name\"}),o.a.createElement(\"br\",null),o.a.createElement(\"p\",{className:\"h6\"},\"Click below to join the game.\",o.a.createElement(\"i\",{className:\"fa fa-gamepad\",\"aria-hidden\":\"true\"}),\" \"),o.a.createElement(\"button\",{type:\"button\",className:\"col-6 btn btn-info form-rounded\",onClick:this.handleClick},\"Join\"))))}}]),a}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(o.a.createElement(d,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[27,2,1]]]);","extractedComments":[]}