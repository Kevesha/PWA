{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\KeveshaB\\\\Desktop\\\\PWA\\\\movie\\\\src\\\\App.js\",\"C:\\\\Users\\\\KeveshaB\\\\Desktop\\\\PWA\\\\movie\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\KeveshaB\\\\Desktop\\\\PWA\\\\movie\\\\src\\\\index.js\"],\"names\":[\"Welcome\",\"_ref\",\"user\",\"react_default\",\"a\",\"createElement\",\"username\",\"LoginForm\",\"e\",\"preventDefault\",\"this\",\"refs\",\"value\",\"props\",\"onSignIn\",\"className\",\"aria-hidden\",\"type\",\"ref\",\"placeholder\",\"onClick\",\"handleSignIn\",\"bind\",\"Component\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"setState\",\"App_Welcome\",\"App_LoginForm\",\"signIn\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"sOAKMA,qBAAU,SAAAC,GAAW,IAATC,EAASD,EAATC,KACd,OACEC,EAAAC,EAAAC,cAAA,MAAA,KAAA,WACUF,EAAAC,EAAAC,cAAA,SAAA,KAASH,EAAKI,UADxB,OAMEC,uLACWC,GACbA,EAAEC,iBACF,IAAIH,EAAWI,KAAKC,KAAKL,SAASM,MAClCF,KAAKG,MAAMC,SAASR,oCAIpB,OACGH,EAAAC,EAAAC,cAAA,MAAA,CAAKU,UAAU,OACfZ,EAAAC,EAAAC,cAAA,SAAA,CAAQU,UAAU,cAChBZ,EAAAC,EAAAC,cAAA,MAAA,CAAKU,UAAU,SACbZ,EAAAC,EAAAC,cAAA,KAAA,CAAIU,UAAU,aAAd,WAAkCZ,EAAAC,EAAAC,cAAA,IAAA,CAAGU,UAAU,gBAAgBC,cAAY,UAC3Eb,EAAAC,EAAAC,cAAA,QAAA,CAAOY,KAAK,OAAOF,UAAU,wCAAwCG,IAAI,WAAWC,YAAY,qBAChGhB,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,IAAA,CAAGU,UAAU,MAAb,gCAA+CZ,EAAAC,EAAAC,cAAA,IAAA,CAAGU,UAAU,gBAAgBC,cAAY,SAAxF,KACAb,EAAAC,EAAAC,cAAA,SAAA,CAAQY,KAAK,SAASF,UAAU,kCAAkCK,QAASV,KAAKW,aAAaC,KAAKZ,OAAlG,kBAhBaa,EAAAA,WAkDXC,cAzBX,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAc,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApB,KAAMG,KACDkB,MAAQ,CAAE7B,KAAM,MAFJuB,sEAIZnB,GAGLI,KAAKsB,SAAS,CACZ9B,KAAM,CACJI,SAAAA,sCAKJ,OACEH,EAAAC,EAAAC,cAAA,MAAA,KAEKK,KAAKqB,MAAM7B,KACZC,EAAAC,EAAAC,cAAC4B,EAAD,CAAS/B,KAAMQ,KAAKqB,MAAM7B,OAC1BC,EAAAC,EAAAC,cAAC6B,EAAD,CAAYpB,SAAUJ,KAAKyB,OAAOb,KAAKZ,gBApB/Ba,EAAAA,WCzBAa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCJJC,EAAAA,EAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAAQC,SAASC,eAAe,SD+G5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport './view/css/bootstrap.css';\\nimport './view/css/main.css';\\nimport './view/css/font-awesome.css';\\n\\nconst Welcome = ({user})=> {\\n    return (\\n      <div>\\n        Welcome <strong>{user.username}</strong>!\\n      </div>\\n    )\\n  }\\n  \\n  class LoginForm extends Component {\\n      handleSignIn(e) {\\n      e.preventDefault()\\n      let username = this.refs.username.value\\n      this.props.onSignIn(username)\\n    }\\n    \\n    render() {\\n      return (\\n         <div className=\\\"App\\\">\\n         <header className=\\\"App-header\\\">\\n           <div className=\\\"col-3\\\" >\\n             <h1 className=\\\"display-4\\\">Welcome <i className=\\\"fa fa-smile-o\\\" aria-hidden=\\\"true\\\"></i></h1>\\n             <input type=\\\"text\\\" className=\\\"form-control form-rounded text-center\\\" ref=\\\"username\\\" placeholder=\\\"What's your name\\\" />\\n             <br/>\\n             <p className=\\\"h6\\\">Click below to join the game.<i className=\\\"fa fa-gamepad\\\" aria-hidden=\\\"true\\\"></i> </p>\\n             <button type=\\\"button\\\" className=\\\"col-6 btn btn-info form-rounded\\\" onClick={this.handleSignIn.bind(this)}>Join</button>\\n           </div>\\n         </header>\\n       </div>\\n      )\\n    }\\n  }\\n  \\n  class App extends Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { user: null }\\n    }\\n    signIn(username) {\\n      // This is where you would call Firebase, an API etc...\\n      // calling setState will re-render the entire app (efficiently!)\\n      this.setState({\\n        user: {\\n          username\\n        }});\\n    }\\n    \\n    render() {\\n      return (\\n        <div>\\n          { \\n            (this.state.user) ? \\n            <Welcome user={this.state.user}/> :\\n            <LoginForm  onSignIn={this.signIn.bind(this)} />\\n          }\\n        </div>\\n      )\\n    }\\n  }\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\n// ReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\n\\n\\n\\n  \\n  ReactDOM.render(<App/>, document.getElementById(\\\"root\\\"))\\n  serviceWorker.unregister();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,t,n){},15:function(e,t,n){},17:function(e,t,n){},19:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(7),c=n.n(o),i=n(1),s=n(2),l=n(4),u=n(3),m=n(5),h=(n(13),n(15),n(17),function(e){var t=e.user;return r.a.createElement(\"div\",null,\"Welcome \",r.a.createElement(\"strong\",null,t.username),\"!\")}),d=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"handleSignIn\",value:function(e){e.preventDefault();var t=this.refs.username.value;this.props.onSignIn(t)}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"div\",{className:\"col-3\"},r.a.createElement(\"h1\",{className:\"display-4\"},\"Welcome \",r.a.createElement(\"i\",{className:\"fa fa-smile-o\",\"aria-hidden\":\"true\"})),r.a.createElement(\"input\",{type:\"text\",className:\"form-control form-rounded text-center\",ref:\"username\",placeholder:\"What's your name\"}),r.a.createElement(\"br\",null),r.a.createElement(\"p\",{className:\"h6\"},\"Click below to join the game.\",r.a.createElement(\"i\",{className:\"fa fa-gamepad\",\"aria-hidden\":\"true\"}),\" \"),r.a.createElement(\"button\",{type:\"button\",className:\"col-6 btn btn-info form-rounded\",onClick:this.handleSignIn.bind(this)},\"Join\"))))}}]),t}(a.Component),f=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).state={user:null},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"signIn\",value:function(e){this.setState({user:{username:e}})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",null,this.state.user?r.a.createElement(h,{user:this.state.user}):r.a.createElement(d,{onSignIn:this.signIn.bind(this)}))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(19)}},[[8,2,1]]]);","extractedComments":[]}